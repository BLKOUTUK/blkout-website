{"version":3,"file":"index-6d0339f6.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/pages/EnhancedGovernancePage.tsx","../../src/components/FederationStatusDashboard.tsx","../../src/components/ModerationDashboard.tsx","../../src/components/ContentSubmissionForm.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","// Enhanced Governance Page with Optional IVOR Integration\n// Demonstrates federated independence - full functionality alone, enhanced when IVOR available\n// File: src/pages/EnhancedGovernancePage.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport { governanceEnhancement } from '../services/GracefulEnhancement';\nimport { serviceDiscovery } from '../services/OptionalServiceDiscovery';\n\ninterface Proposal {\n  id: string;\n  title: string;\n  description: string;\n  proposer: string;\n  status: 'draft' | 'active' | 'approved' | 'rejected';\n  created_at: string;\n  votes?: any[];\n  wisdomInsights?: any;\n  relatedEvents?: any[];\n  enhanced?: boolean;\n}\n\ninterface ServiceStatus {\n  name: string;\n  available: boolean;\n  responseTime?: number;\n  capabilities: string[];\n}\n\nexport const EnhancedGovernancePage: React.FC = () => {\n  const [proposals, setProposals] = useState<Proposal[]>([]);\n  const [selectedProposal, setSelectedProposal] = useState<Proposal | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [serviceStatuses, setServiceStatuses] = useState<ServiceStatus[]>([]);\n  const [showServiceStatus, setShowServiceStatus] = useState(false);\n  const [newProposal, setNewProposal] = useState({\n    title: '',\n    description: '',\n    proposer: ''\n  });\n  const [showCreateForm, setShowCreateForm] = useState(false);\n\n  useEffect(() => {\n    loadGovernanceData();\n    checkServiceStatuses();\n    \n    // Refresh service statuses every 30 seconds\n    const interval = setInterval(checkServiceStatuses, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const loadGovernanceData = async () => {\n    setLoading(true);\n    try {\n      // Load local proposals with optional enhancements\n      const demoProposals = [\n        {\n          id: 'prop_1',\n          title: 'Community Safety Guidelines Update',\n          description: 'Proposal to update our community safety guidelines to better protect vulnerable members.',\n          proposer: 'SafetyCommittee',\n          status: 'active' as const,\n          created_at: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n          votes: []\n        },\n        {\n          id: 'prop_2', \n          title: 'Resource Allocation for Community Events',\n          description: 'Proposal to allocate 30% of community funds toward organizing local events and gatherings.',\n          proposer: 'EventsTeam',\n          status: 'active' as const,\n          created_at: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\n          votes: []\n        }\n      ];\n\n      // Enhance each proposal with optional services\n      const enhancedProposals = await Promise.all(\n        demoProposals.map(async (proposal) => {\n          try {\n            const result = await governanceEnhancement.displayProposal(proposal);\n            return result.baseData;\n          } catch (error) {\n            console.warn(`Failed to enhance proposal ${proposal.id}:`, error);\n            return proposal;\n          }\n        })\n      );\n\n      setProposals(enhancedProposals);\n    } catch (error) {\n      console.error('Failed to load governance data:', error);\n      // Fallback to basic proposals\n      setProposals([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const checkServiceStatuses = async () => {\n    try {\n      const services = serviceDiscovery.getAllServices();\n      const statuses = await Promise.all(\n        services.map(async (service) => {\n          try {\n            const available = await serviceDiscovery.isServiceAvailable(service.name);\n            const health = serviceDiscovery.getServiceHealth(service.name);\n            \n            return {\n              name: service.name,\n              available,\n              responseTime: health?.responseTime,\n              capabilities: service.capabilities\n            };\n          } catch (error) {\n            return {\n              name: service.name,\n              available: false,\n              capabilities: service.capabilities\n            };\n          }\n        })\n      );\n      \n      setServiceStatuses(statuses);\n    } catch (error) {\n      console.error('Failed to check service statuses:', error);\n    }\n  };\n\n  const handleCreateProposal = async () => {\n    if (!newProposal.title.trim() || !newProposal.description.trim()) {\n      alert('Please fill in all required fields');\n      return;\n    }\n\n    try {\n      const proposal = {\n        id: 'prop_' + Date.now(),\n        ...newProposal,\n        status: 'draft' as const,\n        created_at: new Date().toISOString(),\n        votes: []\n      };\n\n      // Enhance the new proposal\n      const result = await governanceEnhancement.displayProposal(proposal);\n      const enhancedProposal = result.baseData;\n\n      setProposals(prev => [enhancedProposal, ...prev]);\n      setNewProposal({ title: '', description: '', proposer: '' });\n      setShowCreateForm(false);\n\n    } catch (error) {\n      console.error('Failed to create proposal:', error);\n      alert('Failed to create proposal. Please try again.');\n    }\n  };\n\n  const handleVote = async (proposalId: string, choice: 'approve' | 'reject') => {\n    try {\n      const proposal = proposals.find(p => p.id === proposalId);\n      if (!proposal) return;\n\n      // Conduct voting with optional enhancements\n      await governanceEnhancement.conductVoting(proposal);\n      \n      // Update proposal with vote\n      const updatedProposals = proposals.map(p => \n        p.id === proposalId \n          ? { \n              ...p, \n              votes: [...(p.votes || []), { \n                choice, \n                timestamp: new Date().toISOString(),\n                voter: 'current_user'\n              }]\n            }\n          : p\n      );\n\n      setProposals(updatedProposals);\n      \n    } catch (error) {\n      console.error('Voting failed:', error);\n      alert('Voting failed. Please try again.');\n    }\n  };\n\n  const getProposalStatusColor = (status: string) => {\n    switch (status) {\n      case 'active': return 'bg-green-100 text-green-800';\n      case 'draft': return 'bg-yellow-100 text-yellow-800';\n      case 'approved': return 'bg-blue-100 text-blue-800';\n      case 'rejected': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const availableServicesCount = serviceStatuses.filter(s => s.available).length;\n  const totalServicesCount = serviceStatuses.length;\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-violet-800 to-black flex items-center justify-center\">\n        <div className=\"text-white text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-white mx-auto mb-4\"></div>\n          <p>Loading governance system...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-violet-800 to-black py-8\">\n      <div className=\"container mx-auto px-6\">\n        {/* Header */}\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl font-bold bg-gradient-to-r from-violet-400 to-pink-400 bg-clip-text text-transparent mb-4\">\n            Democratic Governance\n          </h1>\n          <p className=\"text-gray-300 text-lg max-w-2xl mx-auto\">\n            Community-driven decision making with optional AI wisdom and federated enhancements\n          </p>\n        </div>\n\n        {/* Service Status Indicator */}\n        <div className=\"mb-6 flex items-center justify-between\">\n          <button\n            onClick={() => setShowServiceStatus(!showServiceStatus)}\n            className=\"flex items-center space-x-2 px-4 py-2 bg-gray-800 text-white rounded-lg hover:bg-gray-700 transition-colors\"\n          >\n            <div className=\"flex items-center space-x-1\">\n              <div className={`w-3 h-3 rounded-full ${availableServicesCount > 0 ? 'bg-green-400' : 'bg-yellow-400'}`}></div>\n              <span className=\"text-sm\">\n                {availableServicesCount}/{totalServicesCount} services available\n              </span>\n            </div>\n            <svg className={`w-4 h-4 transition-transform ${showServiceStatus ? 'rotate-180' : ''}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </button>\n\n          <button\n            onClick={() => setShowCreateForm(true)}\n            className=\"px-6 py-2 bg-violet-600 text-white rounded-lg hover:bg-violet-700 transition-colors\"\n          >\n            Create Proposal\n          </button>\n        </div>\n\n        {/* Service Status Details */}\n        {showServiceStatus && (\n          <div className=\"mb-6 bg-gray-800 rounded-lg p-4\">\n            <h3 className=\"text-white font-semibold mb-3\">Federation Services Status</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n              {serviceStatuses.map(service => (\n                <div key={service.name} className=\"bg-gray-700 rounded p-3\">\n                  <div className=\"flex items-center justify-between mb-2\">\n                    <h4 className=\"text-white font-medium\">{service.name}</h4>\n                    <div className={`w-2 h-2 rounded-full ${service.available ? 'bg-green-400' : 'bg-red-400'}`}></div>\n                  </div>\n                  <p className=\"text-gray-300 text-sm\">\n                    {service.available ? 'Available' : 'Unavailable'}\n                  </p>\n                  {service.responseTime && (\n                    <p className=\"text-gray-400 text-xs\">\n                      Response: {service.responseTime}ms\n                    </p>\n                  )}\n                  <div className=\"mt-2 flex flex-wrap gap-1\">\n                    {service.capabilities.slice(0, 2).map(cap => (\n                      <span key={cap} className=\"px-2 py-1 bg-gray-600 text-gray-300 text-xs rounded\">\n                        {cap}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Create Proposal Modal */}\n        {showCreateForm && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-gray-800 rounded-lg p-6 w-full max-w-md mx-4\">\n              <h3 className=\"text-white text-lg font-semibold mb-4\">Create New Proposal</h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-gray-300 text-sm mb-2\">Title</label>\n                  <input\n                    type=\"text\"\n                    value={newProposal.title}\n                    onChange={(e) => setNewProposal(prev => ({ ...prev, title: e.target.value }))}\n                    className=\"w-full px-3 py-2 bg-gray-700 text-white rounded-lg focus:ring-2 focus:ring-violet-500 outline-none\"\n                    placeholder=\"Proposal title\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-gray-300 text-sm mb-2\">Description</label>\n                  <textarea\n                    value={newProposal.description}\n                    onChange={(e) => setNewProposal(prev => ({ ...prev, description: e.target.value }))}\n                    rows={4}\n                    className=\"w-full px-3 py-2 bg-gray-700 text-white rounded-lg focus:ring-2 focus:ring-violet-500 outline-none\"\n                    placeholder=\"Detailed description of the proposal\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-gray-300 text-sm mb-2\">Proposer</label>\n                  <input\n                    type=\"text\"\n                    value={newProposal.proposer}\n                    onChange={(e) => setNewProposal(prev => ({ ...prev, proposer: e.target.value }))}\n                    className=\"w-full px-3 py-2 bg-gray-700 text-white rounded-lg focus:ring-2 focus:ring-violet-500 outline-none\"\n                    placeholder=\"Your name or committee name\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex space-x-3 mt-6\">\n                <button\n                  onClick={handleCreateProposal}\n                  className=\"flex-1 py-2 bg-violet-600 text-white rounded-lg hover:bg-violet-700 transition-colors\"\n                >\n                  Create Proposal\n                </button>\n                <button\n                  onClick={() => setShowCreateForm(false)}\n                  className=\"flex-1 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors\"\n                >\n                  Cancel\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Proposals List */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {proposals.length === 0 ? (\n            <div className=\"col-span-2 text-center py-12\">\n              <div className=\"text-gray-400 text-lg mb-4\">No active proposals</div>\n              <button\n                onClick={() => setShowCreateForm(true)}\n                className=\"px-6 py-3 bg-violet-600 text-white rounded-lg hover:bg-violet-700 transition-colors\"\n              >\n                Create First Proposal\n              </button>\n            </div>\n          ) : (\n            proposals.map((proposal) => (\n              <div\n                key={proposal.id}\n                className=\"bg-gray-800 rounded-lg p-6 hover:bg-gray-750 transition-colors cursor-pointer\"\n                onClick={() => setSelectedProposal(proposal)}\n              >\n                <div className=\"flex items-center justify-between mb-3\">\n                  <h3 className=\"text-white font-semibold text-lg\">{proposal.title}</h3>\n                  <div className=\"flex items-center space-x-2\">\n                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${getProposalStatusColor(proposal.status)}`}>\n                      {proposal.status}\n                    </span>\n                    {proposal.enhanced && (\n                      <div className=\"flex items-center text-green-400 text-xs\">\n                        <svg className=\"w-3 h-3 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                        </svg>\n                        Enhanced\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                <p className=\"text-gray-300 text-sm mb-4 line-clamp-3\">\n                  {proposal.description}\n                </p>\n                \n                <div className=\"flex items-center justify-between text-xs text-gray-400\">\n                  <span>By: {proposal.proposer}</span>\n                  <span>{new Date(proposal.created_at).toLocaleDateString()}</span>\n                </div>\n\n                {proposal.wisdomInsights && (\n                  <div className=\"mt-3 p-3 bg-violet-900/30 rounded border-l-2 border-violet-400\">\n                    <div className=\"flex items-center text-violet-300 text-xs mb-1\">\n                      <svg className=\"w-3 h-3 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                      </svg>\n                      AI Wisdom ({proposal.wisdomInsights.source})\n                    </div>\n                    <p className=\"text-gray-200 text-sm\">\n                      {proposal.wisdomInsights.insight}\n                    </p>\n                  </div>\n                )}\n\n                <div className=\"mt-4 flex space-x-2\">\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleVote(proposal.id, 'approve');\n                    }}\n                    className=\"flex-1 py-2 px-4 bg-green-600 text-white text-sm rounded hover:bg-green-700 transition-colors\"\n                  >\n                    Approve ({proposal.votes?.filter(v => v.choice === 'approve').length || 0})\n                  </button>\n                  <button\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      handleVote(proposal.id, 'reject');\n                    }}\n                    className=\"flex-1 py-2 px-4 bg-red-600 text-white text-sm rounded hover:bg-red-700 transition-colors\"\n                  >\n                    Reject ({proposal.votes?.filter(v => v.choice === 'reject').length || 0})\n                  </button>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n\n        {/* Detailed Proposal Modal */}\n        {selectedProposal && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n            <div className=\"bg-gray-800 rounded-lg p-6 w-full max-w-2xl max-h-[80vh] overflow-y-auto\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <h3 className=\"text-white text-xl font-semibold\">{selectedProposal.title}</h3>\n                <button\n                  onClick={() => setSelectedProposal(null)}\n                  className=\"text-gray-400 hover:text-white\"\n                >\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                  </svg>\n                </button>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <h4 className=\"text-gray-300 font-medium mb-2\">Description</h4>\n                  <p className=\"text-white\">{selectedProposal.description}</p>\n                </div>\n\n                {selectedProposal.wisdomInsights && (\n                  <div className=\"p-4 bg-violet-900/30 rounded border-l-4 border-violet-400\">\n                    <h4 className=\"text-violet-300 font-medium mb-2 flex items-center\">\n                      <svg className=\"w-4 h-4 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                      </svg>\n                      AI Wisdom from {selectedProposal.wisdomInsights.source}\n                    </h4>\n                    <p className=\"text-gray-200\">{selectedProposal.wisdomInsights.insight}</p>\n                    <div className=\"mt-2 text-xs text-gray-400\">\n                      Relevance: {Math.round(selectedProposal.wisdomInsights.relevance * 100)}% | \n                      Confidence: {Math.round(selectedProposal.wisdomInsights.confidence * 100)}%\n                    </div>\n                  </div>\n                )}\n\n                {selectedProposal.relatedEvents && selectedProposal.relatedEvents.length > 0 && (\n                  <div>\n                    <h4 className=\"text-gray-300 font-medium mb-2\">Related Events</h4>\n                    <div className=\"space-y-2\">\n                      {selectedProposal.relatedEvents.map((event, index) => (\n                        <div key={index} className=\"p-2 bg-gray-700 rounded\">\n                          <p className=\"text-white text-sm\">{event.title || 'Community Event'}</p>\n                          <p className=\"text-gray-400 text-xs\">{event.date || 'Date TBD'}</p>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                <div>\n                  <h4 className=\"text-gray-300 font-medium mb-2\">Voting Status</h4>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"p-3 bg-green-900/30 rounded\">\n                      <div className=\"text-green-400 text-lg font-semibold\">\n                        {selectedProposal.votes?.filter(v => v.choice === 'approve').length || 0}\n                      </div>\n                      <div className=\"text-green-300 text-sm\">Approve</div>\n                    </div>\n                    <div className=\"p-3 bg-red-900/30 rounded\">\n                      <div className=\"text-red-400 text-lg font-semibold\">\n                        {selectedProposal.votes?.filter(v => v.choice === 'reject').length || 0}\n                      </div>\n                      <div className=\"text-red-300 text-sm\">Reject</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EnhancedGovernancePage;","// Federation Status Dashboard Component\n// Shows real-time status of federated services and platform health\n// File: src/components/FederationStatusDashboard.tsx\n\nimport React, { useState } from 'react';\nimport { useServiceHealth, usePerformanceMetrics } from '../hooks/useFederatedModule';\n\ninterface ServiceStatusProps {\n  service: any;\n  compact?: boolean;\n}\n\nconst ServiceStatusCard: React.FC<ServiceStatusProps> = ({ service, compact = false }) => {\n  const getStatusColor = (available: boolean, responseTime?: number) => {\n    if (!available) return 'text-red-400 bg-red-900/20 border-red-400/30';\n    if (responseTime && responseTime > 2000) return 'text-yellow-400 bg-yellow-900/20 border-yellow-400/30';\n    return 'text-green-400 bg-green-900/20 border-green-400/30';\n  };\n\n  const getStatusIcon = (available: boolean) => {\n    if (available) {\n      return (\n        <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n          <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n        </svg>\n      );\n    }\n    return (\n      <svg className=\"w-4 h-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n      </svg>\n    );\n  };\n\n  if (compact) {\n    return (\n      <div className={`flex items-center space-x-2 px-2 py-1 rounded-lg border ${getStatusColor(service.available, service.responseTime)}`}>\n        {getStatusIcon(service.available)}\n        <span className=\"text-sm font-medium\">{service.name}</span>\n        {service.responseTime && (\n          <span className=\"text-xs opacity-75\">{service.responseTime}ms</span>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={`p-4 rounded-lg border backdrop-blur-sm ${getStatusColor(service.available, service.responseTime)}`}>\n      <div className=\"flex items-center justify-between mb-2\">\n        <h3 className=\"font-semibold flex items-center space-x-2\">\n          {getStatusIcon(service.available)}\n          <span>{service.name}</span>\n        </h3>\n        <span className={`px-2 py-1 rounded text-xs font-medium ${\n          service.available ? 'bg-green-500/20 text-green-400' : 'bg-red-500/20 text-red-400'\n        }`}>\n          {service.available ? 'Online' : 'Offline'}\n        </span>\n      </div>\n      \n      <div className=\"space-y-1 text-sm opacity-75\">\n        {service.responseTime && (\n          <div>Response: {service.responseTime}ms</div>\n        )}\n        {service.circuitBreakerState && (\n          <div>Circuit: {service.circuitBreakerState}</div>\n        )}\n        <div>Last checked: {new Date(service.lastChecked).toLocaleTimeString()}</div>\n      </div>\n      \n      {service.capabilities && service.capabilities.length > 0 && (\n        <div className=\"mt-2 flex flex-wrap gap-1\">\n          {service.capabilities.slice(0, 3).map((capability: string) => (\n            <span key={capability} className=\"px-2 py-1 bg-gray-700 text-gray-300 text-xs rounded\">\n              {capability}\n            </span>\n          ))}\n          {service.capabilities.length > 3 && (\n            <span className=\"px-2 py-1 bg-gray-700 text-gray-300 text-xs rounded\">\n              +{service.capabilities.length - 3}\n            </span>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\ninterface FederationStatusDashboardProps {\n  compact?: boolean;\n  showPerformance?: boolean;\n}\n\nexport const FederationStatusDashboard: React.FC<FederationStatusDashboardProps> = ({\n  compact = false,\n  showPerformance = true\n}) => {\n  const { services, overallHealth, loading: servicesLoading, refresh } = useServiceHealth();\n  const { metrics, runPerformanceTest } = usePerformanceMetrics();\n  const [showDetails, setShowDetails] = useState(!compact);\n  const [testRunning, setTestRunning] = useState(false);\n\n  const handleRunPerformanceTest = async () => {\n    setTestRunning(true);\n    try {\n      const results = await runPerformanceTest();\n      console.log('Performance test results:', results);\n      // You could show results in a modal or update state\n    } catch (error) {\n      console.error('Performance test failed:', error);\n    } finally {\n      setTestRunning(false);\n    }\n  };\n\n  const getHealthColor = (health: number) => {\n    if (health >= 0.8) return 'text-green-400';\n    if (health >= 0.5) return 'text-yellow-400';\n    return 'text-red-400';\n  };\n\n  const availableServices = services.filter(s => s.available).length;\n  const totalServices = services.length;\n\n  if (compact) {\n    return (\n      <div className=\"bg-gray-800/50 backdrop-blur-sm rounded-lg p-3 border border-gray-700\">\n        <div className=\"flex items-center justify-between mb-3\">\n          <div className=\"flex items-center space-x-2\">\n            <div className={`w-3 h-3 rounded-full ${availableServices > 0 ? 'bg-green-400' : 'bg-red-400'}`}></div>\n            <span className=\"text-sm font-medium text-white\">\n              Federation Status\n            </span>\n            <span className=\"text-xs text-gray-400\">\n              {availableServices}/{totalServices} online\n            </span>\n          </div>\n          <button\n            onClick={() => setShowDetails(!showDetails)}\n            className=\"text-gray-400 hover:text-white transition-colors\"\n          >\n            <svg className={`w-4 h-4 transition-transform ${showDetails ? 'rotate-180' : ''}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n            </svg>\n          </button>\n        </div>\n\n        {showDetails && (\n          <div className=\"space-y-2\">\n            {services.map(service => (\n              <ServiceStatusCard key={service.name} service={service} compact={true} />\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-white\">Federation Status</h2>\n          <p className=\"text-gray-400\">\n            Real-time status of BLKOUT ecosystem services\n          </p>\n        </div>\n        <div className=\"flex items-center space-x-3\">\n          <button\n            onClick={refresh}\n            disabled={servicesLoading}\n            className=\"px-4 py-2 bg-gray-700 text-white rounded-lg hover:bg-gray-600 transition-colors disabled:opacity-50\"\n          >\n            {servicesLoading ? 'Refreshing...' : 'Refresh'}\n          </button>\n          {showPerformance && (\n            <button\n              onClick={handleRunPerformanceTest}\n              disabled={testRunning}\n              className=\"px-4 py-2 bg-violet-600 text-white rounded-lg hover:bg-violet-700 transition-colors disabled:opacity-50\"\n            >\n              {testRunning ? 'Testing...' : 'Run Performance Test'}\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        <div className=\"bg-gray-800/50 backdrop-blur-sm rounded-lg p-6 border border-gray-700\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-white mb-1\">Platform Health</h3>\n              <div className={`text-3xl font-bold ${getHealthColor(overallHealth)}`}>\n                {Math.round(overallHealth * 100)}%\n              </div>\n            </div>\n            <div className=\"w-12 h-12 rounded-full bg-gray-700 flex items-center justify-center\">\n              <svg className={`w-6 h-6 ${getHealthColor(overallHealth)}`} fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n          </div>\n          <p className=\"text-gray-400 text-sm mt-2\">\n            Overall system health score\n          </p>\n        </div>\n\n        <div className=\"bg-gray-800/50 backdrop-blur-sm rounded-lg p-6 border border-gray-700\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-white mb-1\">Services Online</h3>\n              <div className=\"text-3xl font-bold text-white\">\n                {availableServices}/{totalServices}\n              </div>\n            </div>\n            <div className=\"w-12 h-12 rounded-full bg-gray-700 flex items-center justify-center\">\n              <svg className=\"w-6 h-6 text-blue-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n          </div>\n          <p className=\"text-gray-400 text-sm mt-2\">\n            Connected federation services\n          </p>\n        </div>\n\n        {showPerformance && metrics && (\n          <div className=\"bg-gray-800/50 backdrop-blur-sm rounded-lg p-6 border border-gray-700\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h3 className=\"text-lg font-semibold text-white mb-1\">Avg Load Time</h3>\n                <div className=\"text-3xl font-bold text-white\">\n                  {metrics.platform.averagePageLoadTime}ms\n                </div>\n              </div>\n              <div className=\"w-12 h-12 rounded-full bg-gray-700 flex items-center justify-center\">\n                <svg className=\"w-6 h-6 text-green-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n            </div>\n            <p className=\"text-gray-400 text-sm mt-2\">\n              Platform performance\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Services Grid */}\n      <div>\n        <h3 className=\"text-lg font-semibold text-white mb-4\">Service Details</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {services.map(service => (\n            <ServiceStatusCard key={service.name} service={service} />\n          ))}\n        </div>\n      </div>\n\n      {/* Performance Metrics */}\n      {showPerformance && metrics && (\n        <div className=\"bg-gray-800/50 backdrop-blur-sm rounded-lg p-6 border border-gray-700\">\n          <h3 className=\"text-lg font-semibold text-white mb-4\">Performance Metrics</h3>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-white\">{metrics.platform.systemHealth * 100}%</div>\n              <div className=\"text-gray-400 text-sm\">System Health</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-white\">{metrics.platform.independenceRatio * 100}%</div>\n              <div className=\"text-gray-400 text-sm\">Independence Ratio</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-white\">{metrics.platform.averagePageLoadTime}ms</div>\n              <div className=\"text-gray-400 text-sm\">Avg Page Load</div>\n            </div>\n            <div className=\"text-center\">\n              <div className=\"text-2xl font-bold text-white\">{availableServices}</div>\n              <div className=\"text-gray-400 text-sm\">Available Services</div>\n            </div>\n          </div>\n\n          {metrics.performance.recentMetrics.length > 0 && (\n            <div>\n              <h4 className=\"text-md font-medium text-white mb-2\">Recent Performance</h4>\n              <div className=\"space-y-2 max-h-48 overflow-y-auto\">\n                {metrics.performance.recentMetrics.slice(-10).map((metric: any, index: number) => (\n                  <div key={index} className=\"flex justify-between items-center text-sm\">\n                    <span className=\"text-gray-300\">{metric.name}</span>\n                    <div className=\"flex items-center space-x-2\">\n                      <span className=\"text-white\">{metric.value}{metric.unit}</span>\n                      <span className={`px-2 py-1 rounded-full text-xs ${\n                        metric.status === 'good' ? 'bg-green-500/20 text-green-400' :\n                        metric.status === 'warning' ? 'bg-yellow-500/20 text-yellow-400' :\n                        'bg-red-500/20 text-red-400'\n                      }`}>\n                        {metric.status}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Independence Notice */}\n      <div className=\"bg-violet-900/20 border border-violet-400/30 rounded-lg p-4 backdrop-blur-sm\">\n        <div className=\"flex items-center space-x-2 mb-2\">\n          <svg className=\"w-5 h-5 text-violet-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n          </svg>\n          <h4 className=\"text-violet-300 font-medium\">Federated Independence Architecture</h4>\n        </div>\n        <p className=\"text-gray-300 text-sm\">\n          BLKOUTNXT platform works completely independently. External services enhance the experience but are never required for core functionality. \n          {availableServices === 0 ? \n            \" Currently running in full independence mode - all features are available.\" :\n            ` Currently enhanced by ${availableServices} connected service${availableServices !== 1 ? 's' : ''}.`\n          }\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default FederationStatusDashboard;","import React, { useState, useEffect } from 'react';\nimport { publicationService } from '../services/publicationService';\n\ninterface ModeratedContent {\n  id: string;\n  title: string;\n  content: string;\n  author?: string;\n  status: 'pending' | 'approved' | 'rejected';\n  priority: 'low' | 'medium' | 'high';\n  source: string;\n  created_at?: string;\n  event_date?: string;\n  location?: string;\n}\n\ninterface ModerationDashboardProps {\n  moderatorId: string;\n  onContentModerated?: (contentId: string, action: string) => void;\n}\n\nexport const ModerationDashboard: React.FC<ModerationDashboardProps> = ({\n  moderatorId,\n  onContentModerated\n}) => {\n  const [pendingContent, setPendingContent] = useState<ModeratedContent[]>([]);\n  const [selectedItems, setSelectedItems] = useState<string[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [pendingCount, setPendingCount] = useState(0);\n  const [actionInProgress, setActionInProgress] = useState<string | null>(null);\n\n  // Fetch pending content\n  const fetchPendingContent = async () => {\n    try {\n      setLoading(true);\n      const content = await publicationService.getModerationQueue();\n      setPendingContent(content);\n      \n      const count = await publicationService.getPendingCount();\n      setPendingCount(count);\n    } catch (err) {\n      setError('Failed to load pending content');\n      console.error('Failed to fetch pending content:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPendingContent();\n    \n    // Auto-refresh every 30 seconds\n    const interval = setInterval(fetchPendingContent, 30000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Handle single item moderation\n  const handleSingleAction = async (\n    contentId: string, \n    action: 'approve' | 'reject', \n    reason?: string\n  ) => {\n    try {\n      setActionInProgress(contentId);\n      \n      const response = await fetch('/api/moderate-content', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          action,\n          contentId,\n          moderatorId,\n          reason\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to ${action} content`);\n      }\n\n      // Refresh content list\n      await fetchPendingContent();\n      \n      // Notify parent component\n      onContentModerated?.(contentId, action);\n      \n    } catch (err) {\n      setError(`Failed to ${action} content`);\n      console.error(`${action} failed:`, err);\n    } finally {\n      setActionInProgress(null);\n    }\n  };\n\n  // Handle batch operations\n  const handleBatchAction = async (action: 'approve' | 'reject', reason?: string) => {\n    if (selectedItems.length === 0) {\n      setError('No items selected for batch operation');\n      return;\n    }\n\n    try {\n      setActionInProgress('batch');\n      \n      const results = await publicationService.batchModerationAction(\n        selectedItems,\n        action,\n        moderatorId,\n        reason\n      );\n\n      if (results.failed.length > 0) {\n        setError(`${action} failed for ${results.failed.length} items`);\n      }\n\n      // Clear selections and refresh\n      setSelectedItems([]);\n      await fetchPendingContent();\n      \n    } catch (err) {\n      setError(`Batch ${action} failed`);\n      console.error(`Batch ${action} failed:`, err);\n    } finally {\n      setActionInProgress(null);\n    }\n  };\n\n  // Handle item selection\n  const toggleSelection = (contentId: string) => {\n    setSelectedItems(prev => \n      prev.includes(contentId) \n        ? prev.filter(id => id !== contentId)\n        : [...prev, contentId]\n    );\n  };\n\n  const selectAll = () => {\n    setSelectedItems(pendingContent.map(item => item.id));\n  };\n\n  const clearSelection = () => {\n    setSelectedItems([]);\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'high': return 'text-red-600 bg-red-50';\n      case 'medium': return 'text-yellow-600 bg-yellow-50';\n      case 'low': return 'text-green-600 bg-green-50';\n      default: return 'text-gray-600 bg-gray-50';\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center py-12\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n        <span className=\"ml-2 text-gray-600\">Loading moderation queue...</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"max-w-6xl mx-auto p-6\">\n      {/* Header */}\n      <div className=\"mb-6\">\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">\n          Content Moderation Dashboard\n        </h1>\n        <div className=\"flex items-center justify-between\">\n          <p className=\"text-gray-600\">\n            {pendingCount} items awaiting moderation\n          </p>\n          <button\n            onClick={fetchPendingContent}\n            className=\"px-4 py-2 text-sm bg-gray-100 hover:bg-gray-200 rounded-md\"\n            disabled={loading}\n          >\n            Refresh\n          </button>\n        </div>\n      </div>\n\n      {/* Error Message */}\n      {error && (\n        <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-md\">\n          <p className=\"text-red-800\">{error}</p>\n          <button \n            onClick={() => setError(null)}\n            className=\"text-red-600 hover:text-red-800 text-sm underline\"\n          >\n            Dismiss\n          </button>\n        </div>\n      )}\n\n      {/* Batch Actions */}\n      {selectedItems.length > 0 && (\n        <div className=\"mb-6 p-4 bg-blue-50 border border-blue-200 rounded-md\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-800\">\n              {selectedItems.length} items selected\n            </span>\n            <div className=\"space-x-2\">\n              <button\n                onClick={() => handleBatchAction('approve')}\n                disabled={actionInProgress === 'batch'}\n                className=\"px-4 py-2 bg-green-600 text-white rounded hover:bg-green-700 disabled:opacity-50\"\n              >\n                Batch Approve\n              </button>\n              <button\n                onClick={() => {\n                  const reason = prompt('Enter rejection reason:');\n                  if (reason) handleBatchAction('reject', reason);\n                }}\n                disabled={actionInProgress === 'batch'}\n                className=\"px-4 py-2 bg-red-600 text-white rounded hover:bg-red-700 disabled:opacity-50\"\n              >\n                Batch Reject\n              </button>\n              <button\n                onClick={clearSelection}\n                className=\"px-4 py-2 bg-gray-600 text-white rounded hover:bg-gray-700\"\n              >\n                Clear Selection\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Content List */}\n      <div className=\"bg-white shadow rounded-lg overflow-hidden\">\n        {pendingContent.length === 0 ? (\n          <div className=\"p-8 text-center text-gray-500\">\n            <p>No content awaiting moderation</p>\n          </div>\n        ) : (\n          <>\n            {/* Bulk Selection Header */}\n            <div className=\"px-6 py-3 border-b border-gray-200 bg-gray-50\">\n              <div className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  checked={selectedItems.length === pendingContent.length}\n                  onChange={() => \n                    selectedItems.length === pendingContent.length \n                      ? clearSelection() \n                      : selectAll()\n                  }\n                  className=\"mr-3 h-4 w-4 text-blue-600 rounded border-gray-300\"\n                />\n                <span className=\"text-sm font-medium text-gray-700\">\n                  Select All ({pendingContent.length} items)\n                </span>\n              </div>\n            </div>\n\n            {/* Content Items */}\n            <div className=\"divide-y divide-gray-200\">\n              {pendingContent.map((item) => (\n                <div \n                  key={item.id} \n                  className={`p-6 hover:bg-gray-50 ${\n                    selectedItems.includes(item.id) ? 'bg-blue-50' : ''\n                  }`}\n                >\n                  <div className=\"flex items-start space-x-4\">\n                    {/* Selection Checkbox */}\n                    <input\n                      type=\"checkbox\"\n                      checked={selectedItems.includes(item.id)}\n                      onChange={() => toggleSelection(item.id)}\n                      className=\"mt-1 h-4 w-4 text-blue-600 rounded border-gray-300\"\n                    />\n\n                    {/* Content Details */}\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h3 className=\"text-lg font-medium text-gray-900 truncate\">\n                          {item.title}\n                        </h3>\n                        <span className={`px-2 py-1 text-xs font-medium rounded ${getPriorityColor(item.priority)}`}>\n                          {item.priority}\n                        </span>\n                      </div>\n                      \n                      <p className=\"text-gray-600 text-sm mb-3 line-clamp-3\">\n                        {item.content}\n                      </p>\n                      \n                      <div className=\"flex items-center text-xs text-gray-500 space-x-4 mb-3\">\n                        <span>Source: {item.source}</span>\n                        {item.author && <span>Author: {item.author}</span>}\n                        <span>Created: {item.created_at ? new Date(item.created_at).toLocaleDateString() : 'Unknown'}</span>\n                        {item.event_date && (\n                          <span>Event: {new Date(item.event_date).toLocaleDateString()}</span>\n                        )}\n                        {item.location && <span>Location: {item.location}</span>}\n                      </div>\n                    </div>\n\n                    {/* Action Buttons */}\n                    <div className=\"flex items-center space-x-2\">\n                      <button\n                        onClick={() => handleSingleAction(item.id, 'approve')}\n                        disabled={actionInProgress === item.id}\n                        className=\"px-4 py-2 bg-green-600 text-white text-sm rounded hover:bg-green-700 disabled:opacity-50\"\n                      >\n                        {actionInProgress === item.id ? 'Processing...' : 'Approve'}\n                      </button>\n                      <button\n                        onClick={() => {\n                          const reason = prompt('Enter rejection reason:');\n                          if (reason) handleSingleAction(item.id, 'reject', reason);\n                        }}\n                        disabled={actionInProgress === item.id}\n                        className=\"px-4 py-2 bg-red-600 text-white text-sm rounded hover:bg-red-700 disabled:opacity-50\"\n                      >\n                        Reject\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ModerationDashboard;","// Content Submission Form for Community Liberation Platform\n// Federated Independence Architecture - Works with or without external services\n// File: src/components/ContentSubmissionForm.tsx\n\nimport React, { useState } from 'react';\nimport { publicationService } from '../services/publicationService';\n\ninterface ContentSubmissionFormProps {\n  onSubmit?: (content: any) => void;\n  className?: string;\n}\n\ninterface ContentFormData {\n  title: string;\n  content: string;\n  type: 'article' | 'event' | 'governance' | 'general';\n  priority: 'low' | 'medium' | 'high';\n}\n\nconst ContentSubmissionForm: React.FC<ContentSubmissionFormProps> = ({ \n  onSubmit, \n  className = '' \n}) => {\n  const [formData, setFormData] = useState<ContentFormData>({\n    title: '',\n    content: '',\n    type: 'general',\n    priority: 'medium'\n  });\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState<string | null>(null);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setMessage(null);\n\n    try {\n      // Create submission object\n      const submission = {\n        ...formData,\n        id: crypto.randomUUID(),\n        created_at: new Date().toISOString(),\n        status: 'pending',\n        author: 'Community Submitted',\n        source: 'web_form'\n      };\n\n      // Store locally for independence (fallback)\n      const existingSubmissions = JSON.parse(\n        localStorage.getItem('contentSubmissions') || '[]'\n      );\n      existingSubmissions.push(submission);\n      localStorage.setItem('contentSubmissions', JSON.stringify(existingSubmissions));\n\n      let databaseSuccess = false;\n      let errorMessage = '';\n\n      // Try to submit to database using publicationService\n      try {\n        const contentType = (formData.type === 'event') ? 'events' : 'newsroom_articles';\n        \n        const submissionData = {\n          title: formData.title,\n          content: formData.content,\n          priority: formData.priority,\n          source: 'web_form',\n          author: 'Community Submitted',\n          ...(formData.type === 'event' ? {\n            event_date: new Date().toISOString().split('T')[0],\n            location: 'TBA'\n          } : {})\n        };\n\n        const result = await publicationService.submitContent(submissionData, contentType);\n        \n        if (result && result.id) {\n          databaseSuccess = true;\n          console.log(`Content submitted to ${contentType}:`, result.id);\n        } else {\n          errorMessage = 'Submission failed - no result returned';\n        }\n      } catch (dbError) {\n        console.error('Database submission failed:', dbError);\n        errorMessage = dbError instanceof Error ? dbError.message : 'Network error';\n      }\n\n      // Optional callback for enhanced functionality\n      if (onSubmit) {\n        await onSubmit(submission);\n      }\n\n      // Set success/fallback message\n      if (databaseSuccess) {\n        setMessage('✅ Content submitted successfully to moderation queue!');\n      } else {\n        setMessage(`⚠️ Content saved locally (${errorMessage}) - will sync when services available`);\n      }\n\n      // Reset form\n      setFormData({\n        title: '',\n        content: '',\n        type: 'general',\n        priority: 'medium'\n      });\n\n    } catch (error) {\n      setMessage('⚠️ Submission saved locally - will sync when services available');\n      console.error('Content submission error:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className={`content-submission-form ${className}`}>\n      <h2 className=\"text-2xl font-bold mb-6 text-gray-900\">Submit Content</h2>\n      \n      {message && (\n        <div className={`p-4 rounded-lg mb-4 ${\n          message.includes('successfully') \n            ? 'bg-green-100 text-green-800' \n            : 'bg-yellow-100 text-yellow-800'\n        }`}>\n          {message}\n        </div>\n      )}\n\n      <form onSubmit={handleSubmit} className=\"space-y-6\">\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Title\n          </label>\n          <input\n            type=\"text\"\n            value={formData.title}\n            onChange={(e) => setFormData(prev => ({ ...prev, title: e.target.value }))}\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            required\n          />\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Content Type\n          </label>\n          <select\n            value={formData.type}\n            onChange={(e) => setFormData(prev => ({ ...prev, type: e.target.value as ContentFormData['type'] }))}\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            <option value=\"general\">General</option>\n            <option value=\"article\">Article</option>\n            <option value=\"event\">Event</option>\n            <option value=\"governance\">Governance</option>\n          </select>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Priority\n          </label>\n          <select\n            value={formData.priority}\n            onChange={(e) => setFormData(prev => ({ ...prev, priority: e.target.value as ContentFormData['priority'] }))}\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          >\n            <option value=\"low\">Low</option>\n            <option value=\"medium\">Medium</option>\n            <option value=\"high\">High</option>\n          </select>\n        </div>\n\n        <div>\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n            Content\n          </label>\n          <textarea\n            value={formData.content}\n            onChange={(e) => setFormData(prev => ({ ...prev, content: e.target.value }))}\n            rows={6}\n            className=\"w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            required\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={loading}\n          className={`w-full py-3 px-6 rounded-lg font-semibold ${\n            loading\n              ? 'bg-gray-400 cursor-not-allowed'\n              : 'bg-blue-600 hover:bg-blue-700 text-white'\n          } transition-colors`}\n        >\n          {loading ? 'Submitting...' : 'Submit Content'}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ContentSubmissionForm;","// Enhanced BLKOUTNXT App with Federated Independence Architecture\n// Demonstrates module excellence alone with optional service enhancements\n// File: src/App.tsx\n\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport EnhancedGovernancePage from './pages/EnhancedGovernancePage';\nimport FederationStatusDashboard from './components/FederationStatusDashboard';\nimport ModerationDashboard from './components/ModerationDashboard';\nimport ContentSubmissionForm from './components/ContentSubmissionForm';\nimport { performanceMonitor } from './services/PerformanceMonitoring';\nimport { blkoutModule } from './services/IndependentModuleCore';\nimport { useServiceHealth } from './hooks/useFederatedModule';\n\n// Enhanced Navigation with Federation Status\nconst Navigation: React.FC<{ showFederationStatus: boolean; onToggleStatus: () => void }> = ({\n  showFederationStatus,\n  onToggleStatus\n}) => {\n  const { services, overallHealth } = useServiceHealth();\n  const availableServices = services.filter(s => s.available).length;\n\n  const getHealthColor = (health: number) => {\n    if (health >= 0.8) return 'bg-green-400';\n    if (health >= 0.5) return 'bg-yellow-400';\n    return 'bg-red-400';\n  };\n\n  return (\n    <nav className=\"bg-gray-900 border-b border-gray-800 sticky top-0 z-40\">\n      <div className=\"container mx-auto px-6 py-4\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-6\">\n            <div className=\"flex items-center space-x-3\">\n              <h1 className=\"text-xl font-bold bg-gradient-to-r from-violet-400 to-pink-400 bg-clip-text text-transparent\">\n                BLKOUTNXT\n              </h1>\n              <span className=\"text-xs bg-violet-600/20 text-violet-300 px-2 py-1 rounded-full\">\n                Independent\n              </span>\n            </div>\n            \n            <div className=\"hidden md:flex items-center space-x-4\">\n              <a href=\"/\" className=\"text-gray-300 hover:text-white transition-colors\">\n                Home\n              </a>\n              <a href=\"/governance\" className=\"text-gray-300 hover:text-white transition-colors\">\n                Governance\n              </a>\n              <a href=\"/moderation\" className=\"text-gray-300 hover:text-white transition-colors\">\n                Moderation\n              </a>\n              <a href=\"/submit\" className=\"text-gray-300 hover:text-white transition-colors\">\n                Submit Content\n              </a>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-4\">\n            {/* Federation Status Indicator */}\n            <button\n              onClick={onToggleStatus}\n              className=\"flex items-center space-x-2 px-3 py-1 bg-gray-800 hover:bg-gray-700 rounded-lg transition-colors\"\n            >\n              <div className={`w-2 h-2 rounded-full ${getHealthColor(overallHealth)}`}></div>\n              <span className=\"text-sm text-gray-300\">\n                {availableServices}/{services.length} services\n              </span>\n              <svg \n                className={`w-4 h-4 text-gray-400 transition-transform ${showFederationStatus ? 'rotate-180' : ''}`} \n                fill=\"none\" \n                stroke=\"currentColor\" \n                viewBox=\"0 0 24 24\"\n              >\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 9l-7 7-7-7\" />\n              </svg>\n            </button>\n\n            <div className=\"text-xs text-gray-400\">\n              v1.0.0-fed\n            </div>\n          </div>\n        </div>\n\n        {/* Federation Status Dropdown */}\n        {showFederationStatus && (\n          <div className=\"mt-4 border-t border-gray-800 pt-4\">\n            <FederationStatusDashboard compact={true} showPerformance={false} />\n          </div>\n        )}\n      </div>\n    </nav>\n  );\n};\n\n// Enhanced Home Page with Independence Focus\nconst HomePage: React.FC = () => {\n  const { services } = useServiceHealth();\n  const [moduleHealth, setModuleHealth] = useState<any>(null);\n  const availableServices = services.filter(s => s.available).length;\n\n  useEffect(() => {\n    const loadModuleHealth = async () => {\n      try {\n        const health = await blkoutModule.getHealthStatus();\n        setModuleHealth(health);\n      } catch (error) {\n        console.error('Failed to load module health:', error);\n      }\n    };\n\n    loadModuleHealth();\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-violet-800 to-black text-white\">\n      <div className=\"container mx-auto px-6 py-12\">\n        {/* Hero Section */}\n        <div className=\"text-center mb-16\">\n          <h1 className=\"text-5xl font-bold mb-6 bg-gradient-to-r from-violet-400 via-purple-400 to-pink-400 bg-clip-text text-transparent\">\n            BLKOUT Community Platform\n          </h1>\n          <p className=\"text-xl text-gray-300 max-w-3xl mx-auto mb-8\">\n            Democratic governance and liberation platform built on federated independence architecture. \n            Full functionality guaranteed, enhanced when connected.\n          </p>\n\n          {/* Independence Status */}\n          <div className=\"flex justify-center items-center space-x-6 mb-8\">\n            <div className=\"flex items-center space-x-2 px-4 py-2 bg-green-900/30 border border-green-400/30 rounded-lg\">\n              <svg className=\"w-5 h-5 text-green-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n              </svg>\n              <span className=\"text-green-300 font-medium\">Fully Independent</span>\n            </div>\n            \n            {availableServices > 0 && (\n              <div className=\"flex items-center space-x-2 px-4 py-2 bg-violet-900/30 border border-violet-400/30 rounded-lg\">\n                <svg className=\"w-5 h-5 text-violet-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                </svg>\n                <span className=\"text-violet-300 font-medium\">\n                  Enhanced by {availableServices} service{availableServices !== 1 ? 's' : ''}\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Core Features */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-16\">\n          <div className=\"bg-gray-800/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700\">\n            <div className=\"w-12 h-12 bg-violet-600 rounded-lg flex items-center justify-center mb-4\">\n              <svg className=\"w-6 h-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <h3 className=\"text-xl font-semibold mb-3\">Democratic Governance</h3>\n            <p className=\"text-gray-300 mb-4\">\n              Community-driven decision making with optional AI wisdom and federated insights.\n            </p>\n            <a \n              href=\"/governance\" \n              className=\"inline-flex items-center text-violet-400 hover:text-violet-300 transition-colors\"\n            >\n              Participate\n              <svg className=\"w-4 h-4 ml-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n              </svg>\n            </a>\n          </div>\n\n          <div className=\"bg-gray-800/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700\">\n            <div className=\"w-12 h-12 bg-pink-600 rounded-lg flex items-center justify-center mb-4\">\n              <svg className=\"w-6 h-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M3 4a1 1 0 011-1h4a1 1 0 110 2H6.414l2.293 2.293a1 1 0 01-1.414 1.414L5 6.414V8a1 1 0 11-2 0V4zm9 1a1 1 0 110-2h4a1 1 0 011 1v4a1 1 0 11-2 0V6.414l-2.293 2.293a1 1 0 11-1.414-1.414L13.586 5H12zm-9 7a1 1 0 112 0v1.586l2.293-2.293a1 1 0 111.414 1.414L6.414 15H8a1 1 0 110 2H4a1 1 0 01-1-1v-4zm13-1a1 1 0 011 1v4a1 1 0 01-1 1h-4a1 1 0 110-2h1.586l-2.293-2.293a1 1 0 111.414-1.414L15.586 13V12z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <h3 className=\"text-xl font-semibold mb-3\">Content Moderation</h3>\n            <p className=\"text-gray-300 mb-4\">\n              Community-driven content review with transparent moderation and democratic oversight.\n            </p>\n            <a \n              href=\"/moderation\" \n              className=\"inline-flex items-center text-pink-400 hover:text-pink-300 transition-colors\"\n            >\n              Moderate\n              <svg className=\"w-4 h-4 ml-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n              </svg>\n            </a>\n          </div>\n\n          <div className=\"bg-gray-800/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700\">\n            <div className=\"w-12 h-12 bg-green-600 rounded-lg flex items-center justify-center mb-4\">\n              <svg className=\"w-6 h-6 text-white\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z\" clipRule=\"evenodd\" />\n              </svg>\n            </div>\n            <h3 className=\"text-xl font-semibold mb-3\">Real-time Performance</h3>\n            <p className=\"text-gray-300 mb-4\">\n              Sub-2s load times, 99.9% uptime, and graceful degradation under any conditions.\n            </p>\n            <div className=\"inline-flex items-center text-green-400\">\n              <svg className=\"w-4 h-4 mr-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n              </svg>\n              Optimized\n            </div>\n          </div>\n        </div>\n\n        {/* Architecture Principles */}\n        <div className=\"bg-violet-900/20 border border-violet-400/30 rounded-xl p-8 mb-16 backdrop-blur-sm\">\n          <h2 className=\"text-2xl font-bold mb-6 text-center\">Federated Independence Architecture</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-violet-600/20 border border-violet-400/30 rounded-full flex items-center justify-center mx-auto mb-3\">\n                <svg className=\"w-8 h-8 text-violet-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <h3 className=\"font-semibold mb-2 text-violet-300\">Independence First</h3>\n              <p className=\"text-gray-300 text-sm\">Every module excels completely alone</p>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-pink-600/20 border border-pink-400/30 rounded-full flex items-center justify-center mx-auto mb-3\">\n                <svg className=\"w-8 h-8 text-pink-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path d=\"M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z\" />\n                </svg>\n              </div>\n              <h3 className=\"font-semibold mb-2 text-pink-300\">Optional Enhancement</h3>\n              <p className=\"text-gray-300 text-sm\">Services add value but aren't required</p>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-green-600/20 border border-green-400/30 rounded-full flex items-center justify-center mx-auto mb-3\">\n                <svg className=\"w-8 h-8 text-green-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <h3 className=\"font-semibold mb-2 text-green-300\">Graceful Degradation</h3>\n              <p className=\"text-gray-300 text-sm\">Always work, sometimes enhanced</p>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"w-16 h-16 bg-blue-600/20 border border-blue-400/30 rounded-full flex items-center justify-center mx-auto mb-3\">\n                <svg className=\"w-8 h-8 text-blue-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                  <path fillRule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\" />\n                </svg>\n              </div>\n              <h3 className=\"font-semibold mb-2 text-blue-300\">Circuit Breakers</h3>\n              <p className=\"text-gray-300 text-sm\">Prevent cascading failures</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Module Health Display */}\n        {moduleHealth && (\n          <div className=\"bg-gray-800/50 backdrop-blur-sm rounded-xl p-6 border border-gray-700\">\n            <h3 className=\"text-lg font-semibold mb-4\">Platform Status</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-center\">\n              <div>\n                <div className=\"text-2xl font-bold text-green-400 mb-1\">\n                  {moduleHealth.fullyFunctional ? '✓' : '✗'}\n                </div>\n                <div className=\"text-gray-300 text-sm\">Fully Functional</div>\n              </div>\n              <div>\n                <div className=\"text-2xl font-bold text-blue-400 mb-1\">\n                  {moduleHealth.localStateSize}\n                </div>\n                <div className=\"text-gray-300 text-sm\">Local State Items</div>\n              </div>\n              <div>\n                <div className=\"text-2xl font-bold text-violet-400 mb-1\">\n                  {moduleHealth.availableEnhancements}\n                </div>\n                <div className=\"text-gray-300 text-sm\">Available Enhancements</div>\n              </div>\n              <div>\n                <div className=\"text-2xl font-bold text-pink-400 mb-1\">\n                  {moduleHealth.connectedServices.length}\n                </div>\n                <div className=\"text-gray-300 text-sm\">Connected Services</div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst App: React.FC = () => {\n  const [showFederationStatus, setShowFederationStatus] = useState(false);\n  const [pageLoadStartTime] = useState(Date.now());\n\n  useEffect(() => {\n    // Track page load performance\n    const handleLoad = () => {\n      performanceMonitor.trackPageLoad(\n        window.location.pathname,\n        pageLoadStartTime,\n        [], // Services used (would be populated by actual usage)\n        []  // Fallbacks used\n      );\n    };\n\n    // Track on initial load\n    if (document.readyState === 'complete') {\n      handleLoad();\n    } else {\n      window.addEventListener('load', handleLoad);\n    }\n\n    // Initialize module enhancements\n    const initializeEnhancements = async () => {\n      try {\n        const health = await blkoutModule.getHealthStatus();\n        console.log('Platform initialized:', health);\n      } catch (error) {\n        console.error('Platform initialization error (non-critical):', error);\n      }\n    };\n\n    initializeEnhancements();\n\n    return () => {\n      window.removeEventListener('load', handleLoad);\n    };\n  }, [pageLoadStartTime]);\n\n  return (\n    <Router>\n      <div className=\"App min-h-screen bg-gradient-to-br from-purple-900 via-violet-800 to-black\">\n        <Navigation \n          showFederationStatus={showFederationStatus}\n          onToggleStatus={() => setShowFederationStatus(!showFederationStatus)}\n        />\n        \n        <main>\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/governance\" element={<EnhancedGovernancePage />} />\n            <Route path=\"/moderation\" element={<ModerationDashboard moderatorId=\"current_user\" />} />\n            <Route path=\"/submit\" element={\n              <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-violet-800 to-black py-12\">\n                <div className=\"container mx-auto px-8\">\n                  <h1 className=\"text-4xl font-bold mb-8 text-center bg-gradient-to-r from-violet-400 to-pink-400 bg-clip-text text-transparent\">\n                    Submit Content to Community\n                  </h1>\n                  <ContentSubmissionForm />\n                </div>\n              </div>\n            } />\n            <Route path=\"/federation\" element={\n              <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-violet-800 to-black py-12\">\n                <div className=\"container mx-auto px-8\">\n                  <FederationStatusDashboard compact={false} showPerformance={true} />\n                </div>\n              </div>\n            } />\n          </Routes>\n        </main>\n\n        {/* Footer */}\n        <footer className=\"bg-gray-900 border-t border-gray-800 mt-16\">\n          <div className=\"container mx-auto px-6 py-8\">\n            <div className=\"text-center\">\n              <p className=\"text-gray-400 mb-2\">\n                BLKOUT Community Liberation Platform\n              </p>\n              <p className=\"text-gray-500 text-sm\">\n                🏳️‍🌈 Democratic • Transparent • Community-Led • Liberation-Focused • Independent 🗳️✊🏿\n              </p>\n              <div className=\"mt-4 text-xs text-gray-500\">\n                Federated Independence Architecture v1.0.0 | \n                Built for resilience, enhanced by connection\n              </div>\n            </div>\n          </div>\n        </footer>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;","// Main entry point for BLKOUTNXT Platform\n// Federated Independence Architecture - Community Liberation Technology\n// File: src/main.tsx\n\nimport React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport './index.css'\n\n// Initialize federated architecture\nimport { performanceMonitor } from './services/PerformanceMonitoring'\nimport { blkoutModule } from './services/IndependentModuleCore'\n\n// Track application startup performance\nconst startTime = Date.now()\n\n// Verify independence on startup\nblkoutModule.isFullyFunctional().then(isIndependent => {\n  console.log(`🛡️ BLKOUTNXT Platform ${isIndependent ? 'FULLY INDEPENDENT' : 'PARTIALLY DEPENDENT'}`)\n  \n  performanceMonitor.trackPageLoad('application_startup', startTime, [], [])\n}).catch(error => {\n  console.error('Independence check failed:', error)\n})\n\n// Mount the application\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n)\n\n// Performance monitoring for federated architecture\nperformanceMonitor.trackPageLoad('main_application', startTime)"],"names":["f","require$$0","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","reactJsxRuntime_production_min","jsx","jsxs","jsxRuntimeModule","exports","client","createRoot","hydrateRoot","EnhancedGovernancePage","proposals","setProposals","useState","selectedProposal","setSelectedProposal","loading","setLoading","serviceStatuses","setServiceStatuses","showServiceStatus","setShowServiceStatus","newProposal","setNewProposal","title","description","proposer","showCreateForm","setShowCreateForm","useEffect","interval","setInterval","checkServiceStatuses","clearInterval","loadGovernanceData","async","demoProposals","id","status","created_at","Date","now","toISOString","votes","enhancedProposals","Promise","all","map","proposal","governanceEnhancement","displayProposal","baseData","error","console","warn","services","serviceDiscovery","getAllServices","statuses","service","available","isServiceAvailable","name","health","getServiceHealth","responseTime","capabilities","handleVote","proposalId","choice","find","conductVoting","updatedProposals","timestamp","voter","alert","getProposalStatusColor","availableServicesCount","filter","s","length","totalServicesCount","className","children","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","slice","cap","value","onChange","prev","target","placeholder","rows","trim","enhancedProposal","enhanced","fillRule","clipRule","toLocaleDateString","wisdomInsights","source","insight","stopPropagation","v","Math","round","relevance","confidence","relatedEvents","event","index","date","ServiceStatusCard","compact","getStatusColor","getStatusIcon","circuitBreakerState","lastChecked","toLocaleTimeString","capability","FederationStatusDashboard","showPerformance","overallHealth","servicesLoading","refresh","useServiceHealth","metrics","runPerformanceTest","usePerformanceMetrics","showDetails","setShowDetails","testRunning","setTestRunning","getHealthColor","availableServices","totalServices","disabled","results","log","platform","averagePageLoadTime","systemHealth","independenceRatio","performance","recentMetrics","metric","unit","ModerationDashboard","moderatorId","onContentModerated","pendingContent","setPendingContent","selectedItems","setSelectedItems","setError","pendingCount","setPendingCount","actionInProgress","setActionInProgress","fetchPendingContent","content","publicationService","getModerationQueue","count","getPendingCount","err","handleSingleAction","contentId","action","reason","fetch","method","headers","body","JSON","stringify","ok","Error","handleBatchAction","batchModerationAction","failed","clearSelection","getPriorityColor","priority","prompt","Fragment","checked","item","includes","toggleSelection","author","event_date","location","ContentSubmissionForm","onSubmit","formData","setFormData","message","setMessage","preventDefault","submission","crypto","randomUUID","existingSubmissions","parse","localStorage","getItem","push","setItem","databaseSuccess","errorMessage","contentType","submissionData","split","result","submitContent","dbError","required","Navigation","showFederationStatus","onToggleStatus","href","HomePage","moduleHealth","setModuleHealth","blkoutModule","getHealthStatus","fullyFunctional","localStateSize","availableEnhancements","connectedServices","App","setShowFederationStatus","pageLoadStartTime","handleLoad","performanceMonitor","trackPageLoad","window","pathname","document","readyState","addEventListener","removeEventListener","Router","Routes","Route","path","element","startTime","isFullyFunctional","then","isIndependent","catch","ReactDOM","getElementById","render","React","StrictMode"],"mappings":"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","x_google_ignoreList":[0,1,2]}