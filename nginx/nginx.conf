# BLKOUT Production Nginx Configuration
# High-performance reverse proxy with SSL termination

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '[$time_local] $remote_addr - $remote_user "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: ws: wss: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    
    # Upstream backend services
    upstream ivor_backend {
        least_conn;
        server ivor-backend:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream events_backend {
        least_conn;
        server events-backend:5000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream newsroom_backend {
        least_conn;
        server newsroom-backend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream frontend {
        least_conn;
        server blkoutwebsite:80 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # HTTP to HTTPS redirect
    server {
        listen 80;
        server_name blkoutuk.com www.blkoutuk.com ivor.blkoutuk.com events.blkoutuk.com newsroom.blkoutuk.com;
        return 301 https://$server_name$request_uri;
    }

    # Main website
    server {
        listen 443 ssl http2;
        server_name blkoutuk.com www.blkoutuk.com;
        
        ssl_certificate /etc/nginx/ssl/blkoutuk.com.crt;
        ssl_certificate_key /etc/nginx/ssl/blkoutuk.com.key;
        
        # Security headers specific to main site
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        
        # Frontend application
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
        
        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # IVOR AI Backend
    server {
        listen 443 ssl http2;
        server_name ivor.blkoutuk.com;
        
        ssl_certificate /etc/nginx/ssl/blkoutuk.com.crt;
        ssl_certificate_key /etc/nginx/ssl/blkoutuk.com.key;
        
        # Rate limiting for AI endpoints
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            limit_req_status 429;
            
            proxy_pass http://ivor_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts for AI processing
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
        }
        
        # Legacy endpoints
        location /chat/ {
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://ivor_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check
        location /health/ {
            proxy_pass http://ivor_backend;
            access_log off;
        }
        
        # Metrics (restrict access)
        location /metrics {
            allow 172.20.0.0/16;  # Docker network
            deny all;
            proxy_pass http://ivor_backend;
        }
    }

    # Events Calendar Backend
    server {
        listen 443 ssl http2;
        server_name events.blkoutuk.com;
        
        ssl_certificate /etc/nginx/ssl/blkoutuk.com.crt;
        ssl_certificate_key /etc/nginx/ssl/blkoutuk.com.key;
        
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://events_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /health {
            proxy_pass http://events_backend;
            access_log off;
        }
        
        location /metrics {
            allow 172.20.0.0/16;
            deny all;
            proxy_pass http://events_backend;
        }
    }

    # Newsroom Backend
    server {
        listen 443 ssl http2;
        server_name newsroom.blkoutuk.com;
        
        ssl_certificate /etc/nginx/ssl/blkoutuk.com.crt;
        ssl_certificate_key /etc/nginx/ssl/blkoutuk.com.key;
        
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://newsroom_backend;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # File upload support
            client_max_body_size 10M;
        }
        
        # Serve uploaded files
        location /uploads/ {
            proxy_pass http://newsroom_backend;
            expires 1y;
            add_header Cache-Control "public";
        }
        
        location /health {
            proxy_pass http://newsroom_backend;
            access_log off;
        }
        
        location /metrics {
            allow 172.20.0.0/16;
            deny all;
            proxy_pass http://newsroom_backend;
        }
    }

    # Default server block (catch-all)
    server {
        listen 443 ssl http2 default_server;
        server_name _;
        
        ssl_certificate /etc/nginx/ssl/blkoutuk.com.crt;
        ssl_certificate_key /etc/nginx/ssl/blkoutuk.com.key;
        
        return 444; # Close connection without response
    }
}